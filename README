Regression tests for path MTU discovery implementation in the kernel.

The test suite runs on the machine LOCAL, the kernel under test is
running on REMOTE.  On LOCAL a Scapy program is simulating a
connection to REMOTE TCP chargen service.  The source address is a
non existing address on FAKE_NET.  The LOCAL machine acts as a
router between REMOTE and virtual FAKE_NET_ADDR and can create ICMP
packets.

After the three-way handshake REMOTE fills the virtual TCP receive
buffer of FAKE_NET_ADDR with generated chars.  The data is not
acknowledged.  Then LOCAL sends an fragmentation-needed ICMP packet
and expects REMOTE to retransmit the TCP data.

It is checked that the TCP packet from the REMOTE side has the MTU
size that was announced in the ICMP packet.

EXAMPLE

To run this test I use the following configuration files.
You should choose a different set of MAC and IP addresses.

- My local machine where I run the regression test:

/etc/hosts
# to login to qemu with SSH via IPv6 link-local
fe80::725f:caff:fe21:8d70%tap0		q70

/etc/hostname.tap0
lladdr fe:e1:ba:d0:d5:6d up
inet 10.188.70.17 255.255.255.0
inet6 eui64

- My qemu where the kernel under test is running

/etc/hostname.vio0
lladdr 70:5f:ca:21:8d:70
inet 10.188.70.70 255.255.255.0
inet6 eui64

/etc/inetd.conf
chargen stream  tcp     nowait  root    internal
chargen stream  tcp6    nowait  root    internal

/etc/rc.conf.local
inetd_flags=
sshd_flags=

- My environment when executing the test

LOCAL_IF=tap0
REMOTE_SSH=q70

LOCAL_ADDR=10.188.70.17
REMOTE_ADDR=10.188.70.70
FAKE_NET=10.188.188.0/24
FAKE_NET_ADDR=10.188.188.188

LOCAL_ADDR6=fdd7:e83e:66bc:70:3e97:eff:fea7:9b2
REMOTE_ADDR6=fdd7:e83e:66bc:70:725f:caff:fe21:8d70
FAKE_NET6=fdd7:e83e:66bc:188::/24
FAKE_NET_ADDR6=fdd7:e83e:66bc:188::188
